function robot_definition = select_robot(selected_robot)

    maxSpeed = hex2dec('4FFFFFFF'); % virtual unit
    regulationLoopFrequency = 4e3; % Hz

    Orpheus = struct(...
        'trackWidth', 0.525, ... % m
        'wheelBase', 0.45, ...  % m
        'unitSpeed', 10 / 3.6 / regulationLoopFrequency / maxSpeed, ... % first number in km/h
        'maxSpeedValue', int32(maxSpeed), ...
        'regulationLoopFrequency', regulationLoopFrequency, ...
        'model', 'robot_differential4', ...
        'name', 'Orpheus', ...
        'symbol', struct(...
            'symbol', {{...
                {[1, 1; 1, -1; -1, -1; -1, 1; 1, 1], struct('Color', [0 0.5 0], 'LineWidth', 2)}; ...
                [-1, 0; 1, 0]; ...
                [0.5, 0.5; 1, 0; 0.5, -0.5]; ...
                [0, -0.2; 0, 0.2]}}, ...
            'size', 1, ...
            'minSize', 0.05));

    FektBot = struct(...
        'trackWidth', 1, ...  % m
        'unitSpeed', 3 / 3.6 / regulationLoopFrequency / maxSpeed, ... % first number in km/h
        'maxSpeedValue', int32(maxSpeed), ...
        'regulationLoopFrequency', regulationLoopFrequency, ...
        'model', 'robot_differential', ...
        'name', 'FektBot', ...
        'symbol', struct(...
            'symbol', {{...
                {[1, 1; 1, -1; -1, -1; -1, 1; 1, 1], struct('LineWidth', 2)}; ...
                [-1, 0; 1, 0]; ...
                [0.5, 0.5; 1, 0; 0.5, -0.5]; ...
                [0, -0.2; 0, 0.2]}}, ...
            'size', 1, ...
            'minSize', 0.05));

    SixWheel = struct(...
        'trackWidth', 1, ...  % m
        'unitSpeed', 1 / 3.6 / regulationLoopFrequency / maxSpeed, ... % first number in km/h
        'maxSpeedValue', int32(maxSpeed), ...
        'model', 'NOT DEFINED', ...
        'name', 'SixWheel', ...
        'symbol', struct(...
            'symbol', {{...
                {[1, 1; 1, -1; -1, -1; -1, 1; 1, 1], struct('LineWidth', 2)}; ...
                [-1, 0; 1, 0]; ...
                [0.5, 0.5; 1, 0; 0.5, -0.5]; ...
                [0, -0.2; 0, 0.2]}}, ...
            'size', 1, ...
            'minSize', 0.05));

    switch(lower(selected_robot))
        case 'fektbot'
            robot_definition = FektBot;
        case 'orpheus'
            robot_definition = Orpheus;
        case 'sixwheel'
            robot_definition = SixWheel;
        otherwise
            error('RobotSimulator:UnknownRobot', 'Unknown robot model %s.', selectod_robot);
    end
    
end